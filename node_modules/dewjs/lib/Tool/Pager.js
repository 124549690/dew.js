/**
 * @author     LiuZhaoHui <hi.liuzhaoxin@gmail.com>
 * @link       http://www.eatbean.com/nodejs
**/

var Pager = 
{
    __name__ : "Pager", 
    
    _url : "", 
    _pageSize : 8, 
    _pageStep : 7, 
    _prevText : "上一页", 
    _nextText : "下一页", 
    _paramKey : "#page#", 
    _linkStyle : 
    {
        prev : "<a href=\"#url#\">&lt;&lt;#prev#</a>", 
        next : "<a href=\"#url#\">#next#&gt;&gt;</a>", 
        link : "<a href=\"#url#\">#page#</a>", 
        jump : "<a href=\"#url#\">...</a>", 
        now : "<span>#page#</span>"
    }, 
    
    // 返回一个 Pager 实例
    getInstance : function (data)
    {
        var self = Object.create(this);
        
        if (undefined !== data)
        {
            if ("rowTotal" in data)
            {
                self._rowTotal = data.rowTotal;
            }
            
            /*
            if ("pageTotal" in data)
            {
                self._pageTotal = data.pageTotal;
            }
            */
            
            if ("pageSize" in data)
            {
                self._pageSize = data.pageSize;
            }
            
            if ("pageStep" in data)
            {
                self._pageStep = data.pageStep;
            }
            
            if ("startIndex" in data)
            {
                self._startIndex = data.startIndex;
            }
            
            if ("url" in data)
            {
                self._url = data.url;
            }
            
            if ("prevText" in data)
            {
                self._prevText = data.prevText;
            }
            
            if ("nextText" in data)
            {
                self._nextText = data.nextText;
            }
            
            if ("paramKey" in data)
            {
                self._paramKey = data.paramKey;
            }
        }
        
        return self;
    }, 
    
    // 设置上一页文字
    setPrevText : function (text)
    {
        this._prevText = text;
    }, 
    
    // 设置下一页文字
    setNextText : function (text)
    {
        this._nextText = text;
    }, 
    
    // 设置链接样式，全局修改！
    setLinkStyle : function (name, value)
    {
        if (name in this._linkStyle)
        {
            this._linkStyle[name] = value;
        }
    }, 
    
    // 设置 url 参数关键字
    setParamKey : function (key)
    {
        this._paramKey = key;
    }, 
    
    // 设置行总数
    setRowTotal : function (row)
    {
        this._rowTotal = row;
    }, 
    
    /*
    // 设置页总数
    setPageTotal : function (total)
    {
        this._pageTotal = total;
    }, 
    */
    
    // 设置页大小
    setPageSize : function (size)
    {
        this._pageSize = size;
    }, 
    
    // 设置页步进
    setPageStep : function (step)
    {
        this._pageStep = step;
    }, 
    
    // 设置起始位置
    setStartIndex : function (index)
    {
        this._startIndex = index;
    }, 
    
    // 设置 url 地址
    setUrl : function (url)
    {
        this._url = url;
    }, 
    
    // 获取 url 地址
    getUrl : function ()
    {
        return this._url;
    }, 
    
    // 返回 page 生成的 html 片段
    output : function ()
    {
        var start, end, ret = "";
        var url = this._url;
        var linkStyle = this._linkStyle;
        var pageStep = Math.max(this._pageStep, 7);
        0 === pageStep % 2 && pageStep--;
        var rowTotal = this._rowTotal;
        var pageSize = this._pageSize;
        var pageTotal = Math.ceil(rowTotal / pageSize);
        var startIndex = Math.min(Math.max(this._startIndex, 1), pageTotal);
        var centerIndex = Math.floor(pageStep / 2);
        
        /*
        console.log();
        console.log("pageTotal: " + pageTotal);
        console.log("startIndex: " + startIndex);
        console.log("pageStep: " + pageStep);
        console.log("centerIndex: " + centerIndex);
        console.log();
        */
        
        if (pageTotal > 1)
        {
            // prev page
            if (startIndex > 1)
            {
                ret += linkStyle.prev
                  .replace("#url#", url.replace(this._paramKey, startIndex - 1))
                  .replace("#prev#", this._prevText);
                
                //ret += "\n";
            }
            
            if (startIndex === 1)
            {
                ret += linkStyle.now.replace('#page#', 1);
            }
            else
            {
                // first page
                ret += linkStyle.link
                  .replace("#url#", url.replace(this._paramKey, 1))
                  .replace("#page#", 1);
            }
            
            //ret += "\n";
        }
        
        if (pageTotal > pageStep)
        {
            // right
            if (pageTotal < startIndex + centerIndex)
            {
                ret += linkStyle.jump.replace("#url#", url.replace(this._paramKey, pageTotal - pageStep));
                
                //ret += "\n";
            }
            // left
            else if (startIndex > centerIndex + 1)
            {
                ret += linkStyle.jump.replace("#url#", url.replace(this._paramKey, startIndex - centerIndex));
                
                //ret += "\n";
            }
        }
        
        if (pageTotal < pageStep)
        {
            start = 2;
            end = pageTotal;
        }
        else
        {
            // left
            if (startIndex <= centerIndex)
            {
                start = 2;
                end = pageStep - 1;
            }
            // right
            else if (pageTotal <= startIndex + centerIndex)
            {
                start = pageTotal - (centerIndex << 1) + 1;
                end = pageTotal;
            }
            // center
            else
            {
                start = startIndex - centerIndex + 1;
                end = startIndex + centerIndex - 1;
                
            }
        }
        
        for (; start <= end; start++)
        {
            if (startIndex === start)
            {
                ret += linkStyle.now.replace('#page#', start);
            }
            else
            {
                ret += linkStyle.link
                  .replace('#url#', url.replace(this._paramKey, start))
                  .replace('#page#', start);
            }
            
            //ret += "\n";
        }
        
        // next ... page
        if (pageTotal > pageStep)
        {
            if (startIndex <= centerIndex)
            {
                ret += linkStyle.jump.replace('#url#', url.replace(this._paramKey, pageStep));
                
                //ret += "\n";
            }
            else if (pageTotal > startIndex + centerIndex)
            {
                ret += linkStyle.jump.replace('#url#', url.replace(this._paramKey, startIndex + centerIndex));
                
                //ret += "\n";
            }
            
        }
        
        if (pageTotal > startIndex)
        {
            ret += linkStyle.next
              .replace("#url#", url.replace(this._paramKey, startIndex + 1))
              .replace("#next#", this._nextText);
        }
        
        
        //console.log(ret)
        
        return ret;
    }
};

/*
Pager.getInstance
({
    url : "/index/#p#", 
    rowTotal : 171, 
    pageSize : 8, 
    pageStep : 11, 
    startIndex : 5, 
    paramKey : "#p#"
}).output();
*/

module.exports = Pager;