/**
 * @author     LiuZhaoHui <hi.liuzhaoxin@gmail.com>
 * @link       http://www.eatbean.com/nodejs
**/

"use strict";

var Ip = 
{
    __name__ : "Ip", 
    
    /**
     * @brief ip2long 将 ip 字符串转换为数值
     * @param {string} ip 字符串
     * @return {number} 返回转换后的数值
    **/
    ip2long : function (ip)
    {
        var val = 0, i = ip.length, index = i, flags = 0;
        
        while (~--i)
        {
            if (ip.charCodeAt(i) === 0x2E)
            {
                val += ip.slice(i + 1, index) * Math.pow(256, flags++);
                index = i;
            }
        }
        
        val += ip.slice(i + 1, index) * Math.pow(256, flags++);
        
        return val;
    }, 
    
    /**
     * @brief long2ip 将 ip 数值转换为字符串
     * @param {number} ip 数值
     * @return {string} 返回转换后的字符串
    **/
    long2ip : function (val)
    {
        var ip = "", index = 4, n;
        
        while (--index > 0)
        {
            n = Math.pow(256, index);
            ip += (val / n | 0) + ".";
            val = val % n;
        }
        
        n = Math.pow(256, index);
        ip += val / n | 0;
        
        return ip;
    }, 
    
    IP_REGEX : /^(?:(?:\d|[01]?\d\d|2[0-4]\d|25[0-5])\.){3}(?:\d|[01]?\d\d|2[0-4]\d|25[0-5])$/, 
    isIPAddress : function (ip)
    {
        return this.IP_REGEX.test(ip);
    }
    
};

module.exports = Ip;