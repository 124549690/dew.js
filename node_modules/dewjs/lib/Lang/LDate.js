/**
 * @author     LiuZhaoHui <hi.liuzhaoxin@gmail.com>
 * @link       http://www.eatbean.com/nodejs
**/

"use strict";

var LDate = 
{
    __name__ : "LDate", 
    
    FORMAT_TABLE : 
    {
        Y: 89, y: 121, n: 110, m: 109, 
        j: 106, d: 100, g: 103, h: 104, 
        G: 71, H: 72, i: 105, s: 115, N: 78
    }, 
    
    /**
     * @brief format 格式化一个本地时间/日期
     * @param {string} format 按照给定的格式生成一个日期字符串
     * @param {number} timestamp 指定一个时间戳
     * @return {string} 返回一个指定格式的日期字符串
    **/
    format : function (format, timestamp)
    {
        var i = 0, len = format.length;
        var T = this.FORMAT_TABLE;
        var t = new Date(), s = '', c;
        
        !isNaN(timestamp) && t.setTime(timestamp);
        
        for (; i < len; i++)
        {
            c = format.charCodeAt(i);
            switch (c)
            {
                // 1989 year
                case T.Y : s += t.getFullYear(); break;
                // 89 year
                case T.y : s += t.getFullYear().toString().slice(2); break;
                // 1-12 month
                case T.n : s += t.getMonth() + 1; break;
                // 01-12 month
                case T.m : s += ('0' + (t.getMonth() + 1)).slice(-2); break;
                // 1-31 date
                case T.j : s += t.getDate(); break;
                // 01-31 date
                case T.d : s += ('0' + t.getDate()).slice(-2); break;
                // 1-12 hours
                case T.g : 
                    c = t.getHours();
                    s += c > 13 ? c - 12 : c;
                    break;
                // 01-12 hours
                case T.h : 
                    c = t.getHours();
                    s += ('0' + (c > 13 ? c - 12 : c)).slice(-2);
                    break;
                // 0-23 hours
                case T.G : s += t.getHours(); break;
                // 00-23 hours
                case T.H : s += ('0' + t.getHours()).slice(-2); break;
                // 00-59 minutes
                case T.i : s += ('0' + t.getMinutes()).slice(-2); break;
                // 00-59 seconds
                case T.s : s += ('0' + t.getSeconds()).slice(-2); break;
                // 1-7
                case T.N : 
                    c = t.getDay();
                    s += c === 0 ? 7 : c;
                    break;
                default :
                    s += format.charAt(i);
            }
        }
        
        return s;
    }, 
    
    /**
     * @brief getdate 获得日期/时间信息集合
     * @param {number} timestamp 指定一个时间戳
     * @return {object} 返回一个根据时间戳得出的日期信息对象
    **/
    getdate : function (timestamp)
    {
        var	t = new Date();
        
        !isNaN(timestamp) && t.setTime(timestamp);
        
        return {
            seconds : t.getSeconds(),
            minutes : t.getMinutes(),
            hours : t.getHours(),
            mday : t.getDate(),
            wday : t.getDay(),
            mon : t.getMonth() + 1,
            year : t.getFullYear(),
            0 : t / 1000 | 0
        };
    }
};

module.exports = LDate;