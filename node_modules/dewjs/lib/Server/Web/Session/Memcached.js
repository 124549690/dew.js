/**
 * @author     LiuZhaoHui <hi.liuzhaoxin@gmail.com>
 * @link       http://www.eatbean.com/nodejs
**/

"use strict";

var mc = Dew("use", "DataBase.Memcached");

var Memcached = 
{
    __name__ : "Memcached", 
    
    _emptyFunction : new Function, 
    
    initialize : function (application)
    {
        application.useSection("session");
        this._maxlifetime = application.get("maxlifetime");
    }, 
    
    // 返回一个 Memcached 实例
    getInstance : function (async, sid)
    {
        var self = Object.create(this);
        self._sid = sid;
        
        mc.get(sid, this.setData_.bind(self, async));
        
        return self;
    }, 
    
    setData_ : function (async, err, data)
    {
        if (err)
        {
            this.data = {};
        }
        else if (this._sid in data)
        {
            this.data = JSON.parse(data[this._sid]);
        }
        else
        {
            this.data = data;
        }
        
        async.next();
    }, 
    
    destroy : function (callback)
    {
        mc.del(this._sid, undefined === callback ? this._emptyFunction : callback);
    }, 
    
    commit : function (callback)
    {
        mc.set(this._sid, 
          JSON.stringify(this.data), 
          undefined === callback ? this._emptyFunction : callback, 
          this._maxlifetime);
    }
};

module.exports = Memcached;