/**
 * @author     LiuZhaoHui <hi.liuzhaoxin@gmail.com>
 * @link       http://www.eatbean.com/nodejs
**/

"use strict";

var Validate = Dew("use", "Server.Web.Model.Validate");

var StandardModel = 
{
    __name__ : "StandardModel", 
    
    _database : {}, 
    
    initialize : function (application)
    {
        this._application = application;
    }, 
    
    launch : function (controller)
    {
        this._controller = controller;
        
        return this;
    }, 
    
    set : function (key, value)
    {
        if (!("_property" in this))
        {
            this._property = {};
        }
        
        if ("object" === typeof key)
        {
            value = key;
            for (key in value)
            {
                this._property[key] = value[key];
            }
        }
        else
        {
            this._property[key] = value;
        }
        
        return this;
    }, 
    
    has : function (key)
    {
        return "_property" in this && key in this._property;
    }, 
    
    get : function (key, def)
    {
        if (!("_property" in this))
        {
            this._property = {};
        }
        
        if (undefined === key)
        {
            return this._property;
        }
        
        return key in this._property ? this._property[key] : def;
    }, 
    
    remove : function (key)
    {
        if ("_property" in this && key in this._property)
        {
            delete this._property[key];
        }
        
        return this;
    }, 
    
    get language ()
    {
        if (!("_language" in this))
        {
            this._language = this._controller.language;
        }
        
        return this._language;
    }, 
    
    get config ()
    {
        if (!("_config" in this))
        {
            this._config = this._controller.config;
        }
        
        return this._config;
    }, 
    
    validate : function (item)
    {
        item += "Validate";
        
        if (!(item in this))
        {
            throw new Error(this.__name__ + "." + item + " does not exist");
        }
        
        var data = this[item];
        
        if ("language" in data)
        {
            var lang = this.lang.use(data.language.use).current;
            
            if ("section" in data.language)
            {
                lang = lang[data.language.section];
            }
        }
        
        if ("fields" in data)
        {
            if ("validations" in data)
            {
                return Validate.checkValue(data.fields, data.validations, this._property, lang);
            }
            else
            {
                return Validate.checkField(data.fields, this._property);
            }
        }
        
        return null;
    }, 
    
    store : function (cmd, name)
    {
        if (!("_store" in this))
        {
            this._store = {};
        }
        
        switch (cmd)
        {
            case "use" : 
              if (!(name in this._store))
              {
                  if (!(name in this._database))
                  {
                      this._database[name] = Dew("use", "DataBase." + name[0].toUpperCase() + name.slice(1));
                      this._database[name].initialize(this._application);
                  }
                  
                  this._store[name] = Object.create(this._database[name]);
              }
              
              return this._store[name];
              
            case "remove" : 
              if (name in this._store)
              {
                  delete this._store[name];
              }
              
              return this;
        }
    }
};

module.exports = StandardModel;